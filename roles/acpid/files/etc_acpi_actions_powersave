#!/bin/bash

scriptpath="$(readlink -f "$0")"
workdir="${scriptpath%/*}"
. "${workdir}/common_functions"

acpid_state='/run/acpid'

if ! [ -d "${acpid_state}" ]; then
    echo "The directory ${acpid_state} does not exists. Check (open)tmpfiles configuration."
    exit 1
fi

get_lock

if [ "$4" ]; then
    case "$4" in
        '00000001')
            state='ac'
        ;;
        '00000000')
            state='battery'
        ;;
        *)
            exit 1
        ;;
    esac
else
    if ! [ -d /sys/class/power_supply/AC ]; then
        echo "Looks like there's no power_supply status to probe"
        exit 0
    fi

    read ac_online < /sys/class/power_supply/AC/online
    case "${ac_online}" in
        '1')
            state='ac'
        ;;
        '0')
            state='battery'
        ;;
        *)
            exit 1
        ;;
    esac
fi

# The events can be fired multiple times for one action.
# If we already applied powersave state (and preserved original state of for example boost)
# it's better to not re-apply 'battery' on the top of 'battery' and 'ac' on the top of 'ac'.
if [ "${POWERSAVE_ALWAYS_APPLY}" != "yes" ] && [ "${state}" = "$(cat "${acpid_state}/current_powersave_state" 2>/dev/null)" ]; then
    exit 0
fi

case "${state}" in
    'ac')
        sata_link_power_mgmt performance
        pci_devices performance
        snd_hda_intel performance
        #sysfs_toggle '/sys/devices/system/cpu/cpufreq/boost' 'restore'
        #sysfs_toggle '/sys/class/drm/card0/device/power_dpm_force_performance_level' 'restore'

        cpupower frequency-set -g schedutil

        # Trigger the on-battery logic that prevents CPU from boosting too high unless the load is prolonged.
        ryzen_control powersave

        # Vendor-controlled power mode
        acpi_platform_profile low-power
    ;;
    'battery')
        sata_link_power_mgmt powersave
        pci_devices powersave
        snd_hda_intel powersave

        cpupower frequency-set -g schedutil

        # this is set by firmware, but lets keep it here to re-apply it anyway, hibernation script could change it to max-performance while on battery.
        ryzen_control powersave

        # Vendor-controlled power mode
        acpi_platform_profile low-power

        #sysfs_toggle '/sys/devices/system/cpu/cpufreq/boost' '0'
        #sysfs_toggle '/sys/class/drm/card0/device/power_dpm_force_performance_level' 'low'
    ;;
esac

echo "${state}" >"${acpid_state}/current_powersave_state"
